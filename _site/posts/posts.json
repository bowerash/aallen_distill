[
  {
    "path": "posts/2021-12-13-temp/",
    "title": "temp",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Ashley",
        "url": {}
      }
    ],
    "date": "2021-12-13",
    "categories": [],
    "contents": "\nDistill is a publication format for scientific and technical writing, native to the web.\nLearn more about using Distill at https://rstudio.github.io/distill.\n\n\n\n",
    "preview": {},
    "last_modified": "2021-12-13T18:30:54+00:00",
    "input_file": {}
  },
  {
    "path": "posts/Film_Project/",
    "title": "Gender Inclusivity in the Film Industry",
    "description": "An indepth look at the gender makeup of film directors over the last century",
    "author": [
      {
        "name": "Ashley Allen",
        "url": {}
      }
    ],
    "date": "2021-12-13",
    "categories": [],
    "contents": "\n\nContents\nData Frame Creation - Web Scraping\nList Creation - Multi-Page Web Scraping\nData Cleaning\nGender Determination\nData Description - Summary\nFemale Directed Films\nMale Directed Films\nGenre Distribution\nMovie Ratings\n\nRegression\nFemale Regression\nMale Regression\n\nConclusion\n\nWhile reading a blog post shared by Caroline Barret on July 25, 2018 on R Bloggers I was inspired to imitate her project and address the concern of women directors in the film industry. Like Barret, I wanted to test my R skills by creating my own dataset that would be primarily concerned with how the number of women directed films have increased throughout the years and how those movies performed in comparison to films directed by men. Additionally, I will use simple linear regression to project the likely earnings of a released in the next five years. For the purpose of this project, performance is evaluated by gross box office earnings (adjusted for inflation) and a film’s Meta Score. A Meta Score is assigned by Metacritic after it has received a minimum of fifteen review publications. A score of 81 or higher is determined to be a must-see.\nData Frame Creation - Web Scraping\nThe data frame for this project was scraped from the IMDB list The 1000 Greatest Films of All Time by gibboanx. IMDB lists are a great source of information, but are not based on any specific facts, rather, these lists are based on the opinions of the author and their contributes, so inherently, this data set was going to be biased in some form or another. This list was selected only based on sample size alone.\nUsing the rvest package withing R, I created an intricate for loop that would scrape multiple webpages of data. IMDB list has a maximum of 100 movies per page, and so there were a total of 10 pages that had to be scraped to generate the data frame. To do this, I had to create a flexible URL link that would adjust after every pass through a loop.\nAfter the data frame was created, I wrote it to a csv file and exported to Excel for review and cleaning.\n\n\nShow code\n\nlibrary(rvest) \n\nmovies = data.frame()\n\nfor (page_result in seq(from = 1, to = 10)) {\n\nlink = paste(\"https://www.imdb.com/list/ls006266261/?st_dt=&mode=detail&page=\", page_result, \n\"&ref_=ttls_vm_dtl&sort=list_order,asc\", sep =\"\")\n  \npage = read_html(link)\n\nname <- page %>% rvest::html_nodes(\".lister-item-header a\") %>% rvest::html_text()\nname <- name[!name %in% c(\" Screen Two\")]\n\nmovie_link = html_node(html_nodes(page, '.lister-item-content'),\".lister-item-header a\") %>%  \nhtml_attr(\"href\") %>% paste(\"https://www.imdb.com\", .,  sep=\"\")\nmovie_link2 <- file.path(dirname(movie_link), \"fullcredits\", str_replace(basename(movie_link), \"ttls_li_tt\", \"tt_ql_cl\"))\n\nyear <-html_node(html_nodes(page, '.lister-item-content'),\".text-muted.unbold\") %>% html_text()\nyear <- year[!year %in% c(\"IMDb user rating (average)\",\"Number of votes\",\"Release year or range\")]\n\nrating <-html_node(html_nodes(page, '.lister-item-content'),\".certificate\") %>% html_text()\n\ndirector <- html_node(html_nodes(page, '.lister-item-content'),\".text-small a:nth-child(1)\") %>% html_text()\n#Removes unwanted variables from the director vector\ndirector <- director[!director %in% c(\"gibboanx\" )]\n\ngross <- html_node(html_nodes(page, '.lister-item-content'),\".ghost~ .text-muted+ span\") %>% html_text()\n#Removes unwanted variables from the gross profit vector\ngross <- gross[!gross %in% c(\"|\"  )]\n\nmeta <- html_node(html_nodes(page, '.lister-item-content'), '.ratings-metascore span') %>% html_text()\n\ngenre <- html_node(html_nodes(page, '.lister-item-content'),\".genre\") %>% html_text() \n\n#Calls function to loop through the full credits URL \ncast = sapply(movie_link2, FUN = get_cast, USE.NAMES = FALSE)\n\n#Binds variables into a dataframe\nmovies <- rbind(movies, data.frame(name, year, rating, director, gross, meta, genre, cast, stringsasfactors = FALSE))\n\n#Tracks the progress of the for loop\nprint(paste(\"Page:\", page_result))  \n}\n\n#Writes dataframe movies to a csv file\nwrite.csv(movies, \"movies.csv\")\n\n\n\nList Creation - Multi-Page Web Scraping\nOne aspect that appealed to me as I was creating this data frame were the cast and crew gender make up. This was a large part of Barret’s initial project, so I wanted to attempt to include it in my own project in some fashion.\nTo do a multi-page web scrape I would have leave the IMDB list URL and travel to another location. To create the new URL, I had to pull meta text out of the HTML code and format and entirely new hyperlink using this meta text. Added to the complication was the fact that IMDB has created a splash screen for all their movies, so rather than being taken directly to the location that could easily be scraped, I had to add another level of complexity to my function in order to reach my desired location.\nUltimately, I created a function that, when called within the for loop, would travel to the Cast & Crew credits on IMDB and would scrape each actor, actress, and crew member associated with the movie and would create a list of all cast and crew along with the movie’s title in the list. I would later use Excel’s text-to-column feature to break this list into individual observations. Overall, I scraped nearly 68,000 individuals using this method.\n\n\nShow code\nget_cast = function(movie_link2) {\n  movie_page = read_html(movie_link2)\n  movie_name = movie_page %>% html_nodes(\".parent a\") %>%  html_text() \n  movie_cast = movie_page %>% html_nodes(\".loadlate , .primary_photo+ td a\") %>%  html_text() %>%  paste(movie_name, \"-\", .) \n  %>% paste(collapse = \"|\")\n  movie_cast <- movie_cast[!movie_cast %in% c(\"\" )]\n  gsub('[\\t\\n]', '', movie_cast)\n  \n  return(movie_cast)\n}\n\nData Cleaning\nOne of the largest hurdles of this project was not building the data frame, but rather cleaning it. Cleaning a dataset for analysis is no joke. Data scraped from the internet is rifled with unwanted characters, extra spaces, and unusable information.\nTo clean my data set I used R and Excel together to split my data frame exported from the previous step into three initial tables - Movies, Cast & Crew, and Genre. Next, I proceeded to clean each set on its own, using the movie title and year released as a primary key to rejoin all the tables. Within R I removed unwanted characters and columns. Using Excel, I pivoted the information and split it into multiple columns before finally creating one main data set that was ready for analysis.\nIt was during this step that I also calculated for adjusted gross box office earnings. Using the most recent CPI Data I converted the gross earnings pulled from IMDB into today’s dollars. I will admint that I had many reservations regarding the accuracy of the IMDB data as after conversion the movie Gone with the Wind had a Adjust Gross of nearly $4 Billion, making it an extreme outlier among the data set. I confirmed that IMDB does not adjust for inflation and the calculation I applied to do so was accurate.\nAt this point I considered selecting a new data set, however, time limitations prevented me from doing so. As you continue, please note my reservations regarding this data’s accuracy.\n\n\nShow code\n\n#Converts dataframes to tribbles\nas_tibble(movies)\nas_tibble(cast)\nas_tibble(genre)\n\n#Cleaned up the  column to remove extra spaces\nstring <- genre$Genre\nstr_squish(string)\n\nstring <- cast$Cast.First \nstr_squish(string)\n\nstring <- cast$Cast.Title\nstr_squish(string)\n\n\n\nGender Determination\nThis project is interested in the genders of these individuals, and, while not perfect, R has several packages to help predict the probability of a gender for any given first name. The package ultimately selected was genderdata written by Lincoln Mullen. The package function gender accepts two parameters, first name and year, and then can test the name again a variety of different lists to determine the probability. The list method I select was ssa which is the records kept by the Social Security Administration.\nOne major hurdle in the cleaning step was addressing the issue of names for directors, cast, and crew. The data exported from IMDB had several issues that set off errors and warnings within the function. Every time the function encounters a special character the loop would fail, and the error had to be corrected before it could continue. Attempts at error-catching were tried but ultimately, I had to clean the data to remove all visible special characters and then correct errors as they came up. It took the package at least two hours to fully analyze 68,000 records.\nWhile this package was indeed helpful, it failed to recognize many simple names that should have been easy to identify. After completing the gender determination using the genderdata package I have over 15k unknowns. To complement this package I used Google Sheets to call the Gender API and imported the data I returned. Using these two methods together I was able to assign a gender to most all individuals in the data set.\n\n\nShow code\n\n#Creates an empty vector\ndirector_gender <- c()\n\nfor (i in 1:(length(director_first)-1)){\n  \n  director_gender <- gender(director_first[i], years = movie_year[i], method = \"ssa\") %>% .$gender\n \n  if(length(gender_prob) == 0) {\n    director_gender <- \"Unknown\" %>% append(director_gender,.)\n  } else {\n    director_gender <- append(director_gender,gender_prob)\n  }\n  \n}\n\n#Creates an empty vector\ncast_gender <- c()\n\ngender_test <- function(name,year){\n  gender(name, years = year, method = \"ssa\") %>% .$gender\n}\n\nmy_possibly_test <- function(name,year){\n  possibly(\n    gender_test(name,year),\n    otherwise = \"NA\"\n  )\n}\n\n#This portion here took a lot of work to get through. It involved a lot of testing \nfor (i in 1:(length(cast_first)-1)){\n  \n  test_name = cast_name[i]\n  test_year = cast_year[i]\n  \n  gender_prob <- my_possibly_test(test_name,test_year)\n    \n  if(length(gender_prob) == 0) {\n    cast_gender <- \"Unknown\" %>% append(cast_gender,.)\n  } else {\n    cast_gender <- append(cast_gender,gender_prob)\n  }\n  \n  print(i)\n  \n}\n\n\n\nData Description - Summary\nFinally, after all the scraping and cleaning I had a data set that I felt was fit enough to be analyzed. The initial data set included 1000 observations, however, after removing one extreme outlier and any observation with a $0 gross box office earnings, I had a data set of 936 observations.\nOne thing that I did to make the visuals more appealing was to divide the gross earnings (adjusted) by 1,000,000. This would make the numbers more manageable within the data set and more appealing in visuals.\n\n\nShow code\n\nst(movies,title='Summary Statistics (Entire Data Set)')\n\n\n\nTable 1: Summary Statistics (Entire Data Set)\n\n\nVariable\n\n\nN\n\n\nMean\n\n\nStd. Dev.\n\n\nMin\n\n\nPctl. 25\n\n\nPctl. 75\n\n\nMax\n\n\nYear\n\n\n936\n\n\n1997.079\n\n\n15.305\n\n\n1933\n\n\n1989\n\n\n2009\n\n\n2020\n\n\nDirector.Gender\n\n\n936\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n… female\n\n\n47\n\n\n5%\n\n\n\n\n\n\n\n\n\n\n\n\n… male\n\n\n889\n\n\n95%\n\n\n\n\n\n\n\n\n\n\n\n\nCC_Male\n\n\n936\n\n\n50.737\n\n\n38.629\n\n\n0\n\n\n28\n\n\n62\n\n\n362\n\n\nCC_Female\n\n\n926\n\n\n18.481\n\n\n15.332\n\n\n0\n\n\n9\n\n\n23\n\n\n117\n\n\nCC_Unknown\n\n\n936\n\n\n0.215\n\n\n0.805\n\n\n0\n\n\n0\n\n\n0\n\n\n10\n\n\nGross\n\n\n936\n\n\n70.488\n\n\n100.827\n\n\n0.01\n\n\n6.278\n\n\n100.04\n\n\n936.66\n\n\nGross_Adjusted\n\n\n936\n\n\n136.462\n\n\n200.906\n\n\n0.013\n\n\n13.502\n\n\n176.556\n\n\n1664.473\n\n\nMeta\n\n\n924\n\n\n74.073\n\n\n12.216\n\n\n31\n\n\n66\n\n\n83\n\n\n100\n\n\nAfter finally being able to view the data’s summary statistics it became clear how inadequate this data set was for addressing gender in the film industry. Out of 936 observations, only 47 (5%) of those observations had films led by a female. As stated before, had time allowed, I would have trashed this data set and pulled and more appropriate list, however, this is what I had to work with.\nSeeing that males greatly outweighed female directors, I decided to split the data set in two to further analyze both genders.\nFemale Directed Films\n\n\nShow code\n\nst(movies,title='Summary Statistics')\n\n\n\n(#tab:Female Led Summary Stats)Summary Statistics\n\n\nVariable\n\n\nN\n\n\nMean\n\n\nStd. Dev.\n\n\nMin\n\n\nPctl. 25\n\n\nPctl. 75\n\n\nMax\n\n\nYear\n\n\n936\n\n\n1997.079\n\n\n15.305\n\n\n1933\n\n\n1989\n\n\n2009\n\n\n2020\n\n\nDirector.Gender\n\n\n936\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n… female\n\n\n47\n\n\n5%\n\n\n\n\n\n\n\n\n\n\n\n\n… male\n\n\n889\n\n\n95%\n\n\n\n\n\n\n\n\n\n\n\n\nCC_Male\n\n\n936\n\n\n50.737\n\n\n38.629\n\n\n0\n\n\n28\n\n\n62\n\n\n362\n\n\nCC_Female\n\n\n926\n\n\n18.481\n\n\n15.332\n\n\n0\n\n\n9\n\n\n23\n\n\n117\n\n\nCC_Unknown\n\n\n936\n\n\n0.215\n\n\n0.805\n\n\n0\n\n\n0\n\n\n0\n\n\n10\n\n\nGross\n\n\n936\n\n\n70.488\n\n\n100.827\n\n\n0.01\n\n\n6.278\n\n\n100.04\n\n\n936.66\n\n\nGross_Adjusted\n\n\n936\n\n\n136.462\n\n\n200.906\n\n\n0.013\n\n\n13.502\n\n\n176.556\n\n\n1664.473\n\n\nMeta\n\n\n924\n\n\n74.073\n\n\n12.216\n\n\n31\n\n\n66\n\n\n83\n\n\n100\n\n\nWith 47 observations, my female directors left a lot to be desired, but I worked with what I had. I found it interesting that within this list, films by female directors tended to make less then average. With a mean of $115M vs the group average of $136M. I was surprised when I saw that the first year with a female director was 1933, until I did further research and identified that the director, Merian C. Cooper, was a man and had been misidentified by the gender function (further enhancing my concerns with it).\nI had originally predicted that women would tend to direct more women-led cast and crew (cc), however, I was surprised that the mean number of women cc was roughly the same as men, with a mean of 19.298 for women and 18.437 for men. One thing that did not surprise me was the men overwhelmingly dominated the industry. The average male cc was 32.3 points higher the female cc at 18.481.\nOverall, films led by women had a very large range in Gross adjusted box office, with a range of $518.59M. Additionally, this data was heavily skewed to the right with two large outliers.\n\n\nShow code\n\nfemale_led %>% ggplot(aes(Gross_Adjusted)) +\n  geom_boxplot() +\n  labs(title = \"Female Led Gross Box Office Boxplot\", x = \"Adjust Gross Box Office\") + \n  theme_bw()\n\n\n\n\nMale Directed Films\nFiles directed by men vastly outnumbers the number of films directed by females. This did not come as a surprise as the film industry has long favored men, even as it has become more inclusive in the modern century. However, with 889 observations it because clear that the films in this list were all across the board in terms of Gross Box Office and Meta Scores.\n\n\nShow code\n\nmovies %>% ggplot(aes(Year, Meta, color = Director.Gender)) +\n  geom_point() +\n  facet_wrap(~Director.Gender) +\n  labs(title = \"Meta Score\", x = \"Year Released\", y = \"Meta Score\") + \n  theme_bw()\n\n\n\n\nOn average, male films had a slightly lower Meta score compared to females and but averaged more in box office earnings. Like women, cast and crew tended to be made up of more men than women and the range in box office earnings was extremely high with the lowest film earning only $13K and its highest earning over $1B.\n\n\nShow code\n\nst(male_led,title='Summary Statistics (Male Directed Files)')\n\n\n\n(#tab:Male Led Summary Stats)Summary Statistics (Male Directed Files)\n\n\nVariable\n\n\nN\n\n\nMean\n\n\nStd. Dev.\n\n\nMin\n\n\nPctl. 25\n\n\nPctl. 75\n\n\nMax\n\n\nYear\n\n\n889\n\n\n1997.163\n\n\n15.13\n\n\n1939\n\n\n1989\n\n\n2009\n\n\n2020\n\n\nDirector.Gender\n\n\n889\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n… male\n\n\n889\n\n\n100%\n\n\n\n\n\n\n\n\n\n\n\n\nCC_Male\n\n\n889\n\n\n50.594\n\n\n38.108\n\n\n0\n\n\n28\n\n\n62\n\n\n362\n\n\nCC_Female\n\n\n879\n\n\n18.437\n\n\n15.378\n\n\n0\n\n\n9\n\n\n23\n\n\n117\n\n\nCC_Unknown\n\n\n889\n\n\n0.195\n\n\n0.732\n\n\n0\n\n\n0\n\n\n0\n\n\n9\n\n\nGross\n\n\n889\n\n\n71.241\n\n\n102.086\n\n\n0.01\n\n\n6.39\n\n\n100.13\n\n\n936.66\n\n\nGross_Adjusted\n\n\n889\n\n\n137.572\n\n\n203.177\n\n\n0.013\n\n\n13.97\n\n\n176.534\n\n\n1664.473\n\n\nMeta\n\n\n877\n\n\n74.001\n\n\n12.229\n\n\n31\n\n\n66\n\n\n83\n\n\n100\n\n\nShow code\n\nmale_led %>% ggplot(aes(Gross_Adjusted)) +\n  geom_boxplot() +\n  labs(title = \"Male Led Gross Box Office Boxplot\", x = \"Adjust Gross Box Office\") + \n  theme_bw()\n\n\n\n\nGenre Distribution\nOverall, it does not look like there was any distinct difference in the type of genres directed my men and women. Initially, I had predicted that women would tend towards more “girly” genres, such as romance and drama, however the distribution among the two genders seems to be equal. The only genres of note were horror which saw more male directors then females and animation, where there were no observations of female directed films.\n\n\nShow code\n\n#Creates a Female Count Set\n\nfemale_genre1 <- count(female_led,Genre_1)\nfemale_genre2 <- count(female_led,Genre_2)\nfemale_genre3 <- count(female_led,Genre_3)\n\nfemale_genre1 <- female_genre1 %>%  rename(Genre = Genre_1)\nfemale_genre2 <- female_genre2 %>%  rename(Genre = Genre_2)\nfemale_genre3 <- female_genre3 %>%  rename(Genre = Genre_3)\n\n\ngenre_count <- full_join(\n                female_genre1,\n                female_genre2,\n                by = \"Genre\"\n)\n\ngenre_count <- full_join(\n  female_genre3,\n  genre_count,\n  by = \"Genre\"\n)\n\ngenre_count$Genre[1] = \"Action\"\n\ngenre_count[is.na(genre_count)] <- 0\ngenre_count$n = genre_count$n.x + genre_count$n + genre_count$n.y\ngenre_count = subset(genre_count, select = c(Genre, n))\n\n\n#Creates a Male Count Set\n\nmale_genre1 <- count(male_led,Genre_1)\nmale_genre2 <- count(male_led,Genre_2)\nmale_genre3 <- count(male_led,Genre_3)\n\nmale_genre1 <- male_genre1 %>%  rename(Genre = Genre_1)\nmale_genre2 <- male_genre2 %>%  rename(Genre = Genre_2)\nmale_genre3 <- male_genre3 %>%  rename(Genre = Genre_3)\n\n\ngenre_count_male <- full_join(\n  male_genre1,\n  male_genre2,\n  by = \"Genre\"\n)\n\ngenre_count_male <- full_join(\n  male_genre3,\n  genre_count_male,\n  by = \"Genre\"\n)\n\ngenre_count_male$Genre[1] = \"Action\"\n\ngenre_count_male[is.na(genre_count_male)] <- 0\ngenre_count_male$n = genre_count_male$n.x + genre_count_male$n + genre_count_male$n.y\ngenre_count_male = subset(genre_count_male, select = c(Genre, n))\ngenre_count_male = subset(genre_count_male, Genre != \"#N/A\")\n\ngenre_count_male <- genre_count_male  %>%  rename(male_count = n)\ngenre_count <- genre_count %>%  rename(female_count = n)\n\ngenre_count <- left_join(\n  x = genre_count_male,\n  y = genre_count,\n  by = \"Genre\"\n)\n\ngenre_count[is.na(genre_count)] <- 0\n\ngenre_count <- genre_count[-c(2), ] \n\ngenre_count$female_count[1] = genre_count$female_count[1] + genre_count$female_count[2 ]\n\ngenre_count %>% ggplot(aes(Genre,female_count)) +\n  geom_bar(stat='identity') +\n  labs(title = \"Movie Genres by Female Directors\", x = \"Genre\", y = \"Count\") + \n  theme_bw()\n\n\n\nShow code\n\ngenre_count %>% ggplot(aes(Genre,male_count)) +\n  geom_bar(stat='identity') +\n  labs(title = \"Movie Genres by Male Directors\", x = \"Genre\", y = \"Count\") + \n  theme_bw()\n\n\n\n\nMovie Ratings\nI was very surprised to see that, overwhelmingly, the movies filmed by women were R rated. However, this may be a characteristic of the list and the opinion of the author as males also had an extremely high R rated count. One notable difference between the two sets was that there was at least one X-rated film among the men, while there were none among the females.\n\n\nShow code\n\nfemale_rating <- count(female_led,Rating)\nfemale_rating <- female_rating %>%  rename(count = n)\n\nmale_rating <- count(male_led,Rating)\nmale_rating <- male_rating %>%  rename(count = n)\n\nfemale_rating %>% ggplot(aes(Rating, count)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Movie Ratings by Female Directors\", x = \"Rating\", y = \"Count\") + \n  theme_bw()\n\n\n\nShow code\n\nmale_rating %>% ggplot(aes(Rating, count)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Movie Ratings by Male Directors\", x = \"Rating\", y = \"Count\") + \n  theme_bw()\n\n\n\n\nRegression\nThe main question in this project was in regard to box office earnings among men and women. I wanted to predict what the earnings would be within the next five years for either gender. To do this, I created the below scatter plot:\n\n\nShow code\n\nmovies %>%  ggplot(aes(Year, Gross_Adjusted, color = Director.Gender)) +\n              geom_point(size = 2, alpha = 0.5) +\n              geom_smooth(method = lm, se = F) +\n              facet_wrap(~Director.Gender) +\n              labs(title = \"Gross Box Office\", x = \"Year Released\", y = \"Adjusted Box Office (Millions)\") +   \n              theme_bw()\n\n\n\n\nUsing this scatter plot, I identified a negative relationship between gross box office profits and years, indicating that box office profits are going down. While this is in line with what is expected, I want to reiterate that I have reservations regarding the accuracy of this data.\nTo estimate future box office profits, I utilized a simple liner regression function with the following formula Future Box Office Earning = intercept + Year x\nFemale Regression\n\n\nShow code\n\n##Liner regression on female led movies to predict what a female director can expect to earn in 5 year from now\nmovie.regression <- lm(formula = female_led$Gross_Adjusted ~ female_led$Year, date = female_led)\n\nsummary(movie.regression)\n\n\n\nCall:\nlm(formula = female_led$Gross_Adjusted ~ female_led$Year, date = female_led)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-193.61  -87.34  -57.95   45.32  516.43 \n\nCoefficients:\n                Estimate Std. Error t value Pr(>|t|)\n(Intercept)     3693.898   2392.767   1.544    0.130\nfemale_led$Year   -1.793      1.199  -1.496    0.142\n\nResidual standard error: 149.8 on 45 degrees of freedom\nMultiple R-squared:  0.04735,   Adjusted R-squared:  0.02618 \nF-statistic: 2.237 on 1 and 45 DF,  p-value: 0.1417\n\nFor females the formula to estimate gross income is y = 3693.898 - 1.793x. However, the p value for x is above the 0.05 and is not statistically significant. This is not surprising as the data shape is far from ideal and there are only 47 observations available.\nMale Regression\n\n\nShow code\n\nmale.regression <- lm(formula = male_led$Gross_Adjusted ~ male_led$Year, date = male_led)\n\nsummary(male.regression)\n\n\n\nCall:\nlm(formula = male_led$Gross_Adjusted ~ male_led$Year, date = male_led)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-287.79 -105.90  -64.85   44.90 1370.75 \n\nCoefficients:\n               Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   5593.0259   881.7254   6.343 3.58e-10 ***\nmale_led$Year   -2.7316     0.4415  -6.187 9.33e-10 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 199 on 887 degrees of freedom\nMultiple R-squared:  0.04138,   Adjusted R-squared:  0.04029 \nF-statistic: 38.28 on 1 and 887 DF,  p-value: 9.331e-10\n\nFor males, the line of best fit is y = 5593.0259 - 2.7316x. Unlike females, the p-value for x indicates that the year is statistically significant and therefore using the above formula to estimate that in five years’ time, a male directed film will earn $5.5B at a box office.\nPlease keep in mind, that these numbers are only a reflection of the data set, in which I have several concerns.\nConclusion\nThis was a very interesting deep dive into the movie industry and the makeup of male and female directors. However, if I learned anything from this project it would have to be that the data set is everything! As expressed, several times through this document, I have deep concerns about the accuracy of this data and how it relates to each other. I would not trust the any figures associated with gross or gross adjusted box office.\nAdditionally, I have found several issues concerning the genderdata package and question the likelihood that I will ever use it again. I do not think that it performed its job well or accurately and encountered enough errors for there to be an extreme slowdown in my work progress. As I continue to hone my web scraping skills, I will also need to learn how to assess the accuracy and usability of a dataset before putting in the work and effort to build something to analyze.\n\n\n\n",
    "preview": {},
    "last_modified": "2021-12-13T18:38:53+00:00",
    "input_file": {}
  }
]
